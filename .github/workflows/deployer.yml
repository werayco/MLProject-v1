name: practice-deploy

on:
  push:
    branches: [main]

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Pre-checkout
        id: checkout-practice
        uses: actions/checkout@v4

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{secrets.AWS_ARN_ROLE}}
          aws-region: us-east-1
          audience: sts.amazonaws.com

      - name: Test AWS Credential
        run: aws sts get-caller-identity

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image to ECR
        run: |
          docker build -t ${{ steps.login-ecr.outputs.registry }}/oidcpractice:latest .
          docker push ${{ steps.login-ecr.outputs.registry }}/oidcpractice:latest

      - name: Copy docker-compose to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PEM }}
          port: 22
          source: ./docker-compose.yml
          target: "/home/${{ secrets.EC2_USERNAME }}/ecrpractice"

      - name: Execute remote SSH commands using password
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PEM }}
          port: 22
          script: |
              cd /home/${{ secrets.EC2_USERNAME }}/ecrpractice

              docker compose down

              aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}
              docker compose up -d
              echo "the services are being built!"

