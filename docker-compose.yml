version: "3.9"

services:
  gildedsoldier:
    image: 518033441890.dkr.ecr.us-east-1.amazonaws.com/oidcpractice:latest
    container_name: gilded-soldier
    ports:
      - 7890:7890
    volumes:
      - /home/ubuntu/.aws:/root/.aws
    restart: always
    networks:
      - myApp
    labels:
      - traefik.enable=true
      - traefik.http.routers.gildedsoldier.rule=Host(`app.devrayco.name.ng`)
      - traefik.http.routers.gildedsoldier.entrypoints=websecure
      - traefik.http.routers.gildedsoldier.tls.certresolver=thenonsensedev

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - myApp

  worker:
    image: 518033441890.dkr.ecr.us-east-1.amazonaws.com/oidcpractice:latest
    container_name: celery_worker
    command: celery -A celeryConfig.celset.celery_app worker --loglevel=info
    depends_on:
      - redis
    networks:
      - myApp

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - myApp
    ports:
      - "9090:9090"
    depends_on:
      - gildedsoldier
    labels:
      - traefik.enable=true
      - traefik.http.routers.prometheus.rule=Host(`prometheus.devrayco.name.ng`)
      - traefik.http.routers.prometheus.entrypoints=websecure
      - traefik.http.routers.prometheus.tls.certresolver=thenonsensedev

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=rayisthenonsensedev
    depends_on:
      - prometheus
    networks:
      - myApp
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.rule=Host(`grafana.devrayco.name.ng`)
      - traefik.http.routers.grafana.entrypoints=websecure
      - traefik.http.routers.grafana.tls.certresolver=thenonsensedev

networks:
  myApp:
    external: true
